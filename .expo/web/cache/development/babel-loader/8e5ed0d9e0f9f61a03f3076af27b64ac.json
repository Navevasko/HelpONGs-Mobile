{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Video } from \"expo-av\";\nimport React, { useState } from \"react\";\nimport { styles } from \"./style\";\nimport InvisibleInput from \"../InvisibleInput\";\nimport Icon from \"@expo/vector-icons/Feather\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function ModalPost(_ref) {\n  var file = _ref.file,\n      setFile = _ref.setFile;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      desc = _useState2[0],\n      setDesc = _useState2[1];\n\n  var handleFile = function handleFile(file) {\n    if (file == null) {\n      return;\n    } else if (file.type == \"image\") {\n      return \"image\";\n    } else if (file.type == \"video\") {\n      return \"video\";\n    }\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: {\n        paddingStart: 20,\n        paddingEnd: 25\n      },\n      children: _jsx(InvisibleInput, {\n        placeholder: \"Faça uma descrição de seu post\",\n        value: desc,\n        onChangeText: function onChangeText(text) {\n          setDesc(text);\n        }\n      })\n    }), handleFile(file) == \"image\" && _jsxs(View, {\n      children: [_jsx(Icon, {\n        name: \"x\",\n        size: 45,\n        style: styles.close,\n        onPress: function onPress() {\n          setFile(\"\");\n        }\n      }), _jsx(Image, {\n        source: {\n          uri: file.uri\n        },\n        style: [styles.file, {\n          height: file.height / 2\n        }]\n      })]\n    }), handleFile(file) == \"video\" && _jsx(Video, {\n      source: {\n        uri: file.uri\n      },\n      style: styles.file,\n      resizeMode: \"cover\",\n      shouldPlay: true,\n      isLooping: true\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/suporte/Desktop/HelpONGs (MOBILE)/src/components/ModalPost/index.jsx"],"names":["Video","React","useState","styles","InvisibleInput","Icon","ModalPost","file","setFile","desc","setDesc","handleFile","type","paddingStart","paddingEnd","text","close","uri","height"],"mappings":";;;;AACA,SAASA,KAAT,QAAsB,SAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT;AACA,OAAOC,cAAP;AACA,OAAOC,IAAP;;;;AAEA,eAAe,SAASC,SAAT,OAAsC;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AACnD,kBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACJ,IAAD,EAAU;AAC3B,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB;AACD,KAFD,MAEO,IAAIA,IAAI,CAACK,IAAL,IAAa,OAAjB,EAA0B;AAC/B,aAAO,OAAP;AACD,KAFM,MAEA,IAAIL,IAAI,CAACK,IAAL,IAAa,OAAjB,EAA0B;AAC/B,aAAO,OAAP;AACD;AACF,GARD;;AAUA,SACE;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE,EAAhB;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAb;AAAA,gBACE,KAAC,cAAD;AACE,QAAA,WAAW,EAAE,gCADf;AAEE,QAAA,KAAK,EAAEL,IAFT;AAGE,QAAA,YAAY,EAAE,sBAACM,IAAD,EAAU;AACtBL,UAAAA,OAAO,CAACK,IAAD,CAAP;AACD;AALH;AADF,MADF,EAWGJ,UAAU,CAACJ,IAAD,CAAV,IAAoB,OAApB,IACC,MAAC,IAAD;AAAA,iBACE,KAAC,IAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,KAAK,EAAEJ,MAAM,CAACa,KAHhB;AAIE,QAAA,OAAO,EAAE,mBAAM;AACbR,UAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AANH,QADF,EASE,KAAC,KAAD;AACE,QAAA,MAAM,EAAE;AAAES,UAAAA,GAAG,EAAEV,IAAI,CAACU;AAAZ,SADV;AAEE,QAAA,KAAK,EAAE,CAACd,MAAM,CAACI,IAAR,EAAc;AAAEW,UAAAA,MAAM,EAAEX,IAAI,CAACW,MAAL,GAAc;AAAxB,SAAd;AAFT,QATF;AAAA,MAZJ,EA2BGP,UAAU,CAACJ,IAAD,CAAV,IAAoB,OAApB,IACC,KAAC,KAAD;AACE,MAAA,MAAM,EAAE;AAAEU,QAAAA,GAAG,EAAEV,IAAI,CAACU;AAAZ,OADV;AAEE,MAAA,KAAK,EAAEd,MAAM,CAACI,IAFhB;AAGE,MAAA,UAAU,EAAE,OAHd;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,SAAS;AALX,MA5BJ;AAAA,IADF;AAuCD","sourcesContent":["import { View, Image, Text } from \"react-native\";\nimport { Video } from \"expo-av\";\nimport React, { useState } from \"react\";\nimport { styles } from \"./style\";\nimport InvisibleInput from \"../InvisibleInput\";\nimport Icon from \"react-native-vector-icons/Feather\";\n\nexport default function ModalPost({ file, setFile }) {\n  const [desc, setDesc] = useState(\"\");\n\n  const handleFile = (file) => {\n    if (file == null) {\n      return;\n    } else if (file.type == \"image\") {\n      return \"image\";\n    } else if (file.type == \"video\") {\n      return \"video\";\n    }\n  };\n\n  return (\n    <>\n      <View style={{ paddingStart: 20, paddingEnd: 25 }}>\n        <InvisibleInput\n          placeholder={\"Faça uma descrição de seu post\"}\n          value={desc}\n          onChangeText={(text) => {\n            setDesc(text);\n          }}\n        />\n      </View>\n\n      {handleFile(file) == \"image\" && (\n        <View>\n          <Icon\n            name=\"x\"\n            size={45}\n            style={styles.close}\n            onPress={() => {\n              setFile(\"\");\n            }}\n          />\n          <Image\n            source={{ uri: file.uri }}\n            style={[styles.file, { height: file.height / 2 }]}\n          />\n        </View>\n      )}\n      {handleFile(file) == \"video\" && (\n        <Video\n          source={{ uri: file.uri }}\n          style={styles.file}\n          resizeMode={\"cover\"}\n          shouldPlay\n          isLooping\n        />\n      )}\n    </>\n  );\n}\n\n// Object {\n//   \"cancelled\": false,\n//   \"duration\": 30528,\n//   \"height\": 270,\n//   \"rotation\": 0,\n//   \"type\": \"video\",\n//   \"uri\": \"file:///data/user/0/host.exp.exponent/cache/ExperienceData/%2540anonymous%252FHelpONGs-e8f9cee1-e98f-40ef-a883-64c9fe721af7/ImagePicker/bc4a7d6c-a982-4ab2-bdbd-52babf1fa2e2.mp4\",\n//   \"width\": 480,\n// }\n"]},"metadata":{},"sourceType":"module"}