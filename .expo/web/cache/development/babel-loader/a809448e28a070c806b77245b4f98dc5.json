{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ContainerModal from \"../ContainerModal\";\nimport TypePicker from \"../TypePicker\";\nimport ONGData from \"../ONGData\";\nimport BottomSheetPost from \"../BottomSheetPost\";\nimport FullButton from \"../FullButton\";\nimport ModalEvento from \"../ModalEvento\";\nimport ModalVaga from \"../ModalVaga\";\nimport ModalPost from \"../ModalPost\";\nimport { styles } from \"./style\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport ModalEndereco from \"../ModalEndereco\";\nimport ModalDataHora from \"../ModalDataHora\";\nimport base64 from \"react-native-base64\";\nimport { api } from \"../../../api\";\nimport ModalShadow from \"../ModalShadow\";\nimport { theme } from \"../../global/styles/theme\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function ModalCreate(_ref) {\n  var onClose = _ref.onClose;\n\n  var _useState = useState(\"post\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Type = _useState2[0],\n      setType = _useState2[1];\n\n  var types = [{\n    label: \"Post\",\n    value: \"post\"\n  }, {\n    label: \"Evento\",\n    value: \"evento\"\n  }, {\n    label: \"Vaga\",\n    value: \"vaga\"\n  }];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      file = _useState4[0],\n      _setFile = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalEndereco = _useState6[0],\n      setModalEndereco = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalDataHora = _useState8[0],\n      setModalDataHora = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      endereco = _useState10[0],\n      setEndereco = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      data = _useState12[0],\n      _setData = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      tituloEvento = _useState14[0],\n      setTituloEvento = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      descEvento = _useState16[0],\n      setDescEvento = _useState16[1];\n\n  var _useState17 = useState({}),\n      _useState18 = _slicedToArray(_useState17, 2),\n      descPost = _useState18[0],\n      setDescPost = _useState18[1];\n\n  var _useState19 = useState({}),\n      _useState20 = _slicedToArray(_useState19, 2),\n      descVaga = _useState20[0],\n      setVagaArray = _useState20[1];\n\n  var _useState21 = useState({}),\n      _useState22 = _slicedToArray(_useState21, 2),\n      reqVaga = _useState22[0],\n      setReqVaga = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      loading = _useState24[0],\n      setLoading = _useState24[1];\n\n  var fileArray = [];\n\n  var handlePost = function handlePost(desc, fileArray) {\n    var fileName;\n    var fileType;\n\n    if (desc !== \"\") {\n      if (fileArray !== null) {\n        fileArray.map(function (file) {});\n      }\n\n      var arrayPost = {\n        idOng: 1,\n        descricao: desc,\n        media: []\n      };\n      api.post(\"/post\", arrayPost).then(function (data) {\n        console.log(data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else {\n      ToastAndroid.show(\"Por favor, faça uma descrição de seu post\");\n    }\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Desculpe! Precisamos de permissão para fazer isso funcionar\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var handleChoosePhoto = function handleChoosePhoto() {\n    var result;\n    return _regeneratorRuntime.async(function handleChoosePhoto$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsMultipleSelection: true,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              fileArray.push(result);\n              console.log(fileArray);\n            }\n\n            console.log(result.type);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(Modal, {\n    transparent: true,\n    animationType: \"slide\",\n    onRequestClose: onClose,\n    children: _jsxs(GestureHandlerRootView, {\n      style: {\n        flex: 1\n      },\n      children: [loading && _jsx(ModalShadow, {\n        children: _jsxs(View, {\n          style: {\n            width: \"40%\",\n            height: \"20%\",\n            backgroundColor: theme.colors.white,\n            borderRadius: 10,\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\"\n          },\n          children: [_jsx(ActivityIndicator, {\n            size: 60,\n            color: theme.colors.secondary\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 20,\n              fontFamily: theme.fonts.medium\n            },\n            children: [\" \", \"Carregando...\", \" \"]\n          })]\n        })\n      }), _jsxs(ContainerModal, {\n        onClose: onClose,\n        title: \"Criar Publicação\",\n        publish: true,\n        onPress: function onPress() {\n          if (Type === \"post\") {\n            handlePost(\"tesrte\", file);\n          } else if (Type === \"evento\") {\n            console.log(eventoArray);\n          } else if (Type === \"vaga\") {\n            console.log(vagaArray);\n          }\n        },\n        children: [_jsx(ONGData, {\n          image: require(\"../../assets/img/ONG.png\"),\n          name: \"GreenPeace\"\n        }), _jsx(TypePicker, {\n          onValueChange: function onValueChange(item) {\n            setType(item);\n          },\n          selectedValue: Type,\n          items: types,\n          mode: \"dialog\"\n        }), _jsxs(ScrollView, {\n          style: styles.containerInput,\n          contentContainerStyle: {\n            justifyContent: \"center\"\n          },\n          children: [Type == \"post\" && _jsx(ModalPost, {\n            file: file,\n            setFile: function setFile(data) {\n              _setFile(data);\n            }\n          }), Type == \"evento\" && _jsx(ModalEvento, {\n            file: file,\n            setFile: function setFile(data) {\n              _setFile(data);\n            }\n          }), Type == \"vaga\" && _jsx(ModalVaga, {})]\n        }), _jsxs(BottomSheetPost, {\n          children: [Type == \"post\" && _jsx(FullButton, {\n            icon: \"image\",\n            text: \"Adicionar Foto/Vídeo\",\n            onPress: handleChoosePhoto\n          }), Type == \"evento\" && _jsxs(_Fragment, {\n            children: [_jsx(FullButton, {\n              icon: \"image\",\n              text: \"Adicionar Foto/Vídeo\",\n              onPress: handleChoosePhoto\n            }), _jsx(FullButton, {\n              icon: \"map-pin\",\n              text: \"Adicionar Endereço\",\n              onPress: function onPress() {\n                setModalEndereco(true);\n              }\n            }), _jsx(FullButton, {\n              icon: \"calendar\",\n              text: \"Adicionar Data e Hora\",\n              onPress: function onPress() {\n                setModalDataHora(true);\n              }\n            })]\n          }), modalEndereco && _jsx(ModalEndereco, {\n            setData: function setData(data) {\n              setEndereco(data);\n            },\n            onClose: function onClose() {\n              setModalEndereco(false);\n            }\n          }), modalDataHora && _jsx(ModalDataHora, {\n            onClose: function onClose() {\n              setModalDataHora(false);\n            },\n            setData: function setData(data) {\n              _setData(data);\n            }\n          }), Type == \"vaga\" && _jsxs(_Fragment, {\n            children: [_jsx(FullButton, {\n              icon: \"map-pin\",\n              text: \"Adicionar Endereço\",\n              onPress: function onPress() {\n                setModalEndereco(true);\n              }\n            }), _jsx(FullButton, {\n              icon: \"calendar\",\n              text: \"Adicionar Data e Hora\",\n              onPress: function onPress() {\n                setModalDataHora(true);\n              }\n            })]\n          })]\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/Users/suporte/Desktop/HelpONGs (MOBILE)/src/components/ModalCreate/index.jsx"],"names":["React","useState","useEffect","ImagePicker","ContainerModal","TypePicker","ONGData","BottomSheetPost","FullButton","ModalEvento","ModalVaga","ModalPost","styles","GestureHandlerRootView","ModalEndereco","ModalDataHora","base64","api","ModalShadow","theme","ModalCreate","onClose","Type","setType","types","label","value","file","setFile","modalEndereco","setModalEndereco","modalDataHora","setModalDataHora","endereco","setEndereco","data","setData","tituloEvento","setTituloEvento","descEvento","setDescEvento","descPost","setDescPost","descVaga","setVagaArray","reqVaga","setReqVaga","loading","setLoading","fileArray","handlePost","desc","fileName","fileType","map","arrayPost","idOng","descricao","media","post","then","console","log","catch","error","ToastAndroid","show","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","handleChoosePhoto","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsMultipleSelection","allowsEditing","aspect","quality","result","cancelled","push","type","flex","width","height","backgroundColor","colors","white","borderRadius","alignItems","justifyContent","secondary","fontSize","fontFamily","fonts","medium","eventoArray","vagaArray","require","item","containerInput"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { Modal, ScrollView, Text, ToastAndroid, View } from \"react-native\";\nimport ContainerModal from \"../ContainerModal\";\nimport TypePicker from \"../TypePicker\";\nimport ONGData from \"../ONGData\";\nimport BottomSheetPost from \"../BottomSheetPost\";\nimport FullButton from \"../FullButton\";\nimport ModalEvento from \"../ModalEvento\";\nimport ModalVaga from \"../ModalVaga\";\nimport ModalPost from \"../ModalPost\";\nimport { styles } from \"./style\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport ModalEndereco from \"../ModalEndereco\";\nimport ModalDataHora from \"../ModalDataHora\";\nimport base64 from \"react-native-base64\";\nimport { api } from \"../../../api\";\nimport ModalShadow from \"../ModalShadow\";\nimport { theme } from \"../../global/styles/theme\";\nimport { ActivityIndicator } from \"react-native\";\n\nexport default function ModalCreate({ onClose }) {\n  const [Type, setType] = useState(\"post\");\n  const types = [\n    { label: \"Post\", value: \"post\" },\n    { label: \"Evento\", value: \"evento\" },\n    { label: \"Vaga\", value: \"vaga\" },\n  ];\n  const [file, setFile] = useState();\n  const [modalEndereco, setModalEndereco] = useState(false);\n  const [modalDataHora, setModalDataHora] = useState(false);\n  const [endereco, setEndereco] = useState({});\n  const [data, setData] = useState({});\n  const [tituloEvento, setTituloEvento] = useState(\"\");\n  const [descEvento, setDescEvento] = useState(\"\");\n  const [descPost, setDescPost] = useState({});\n  const [descVaga, setVagaArray] = useState({});\n  const [reqVaga, setReqVaga] = useState({});\n  const [loading, setLoading] = useState(false);\n  const fileArray = []\n\n  const handlePost = (desc, fileArray) => {\n    let fileName;\n    let fileType;\n\n    if (desc !== \"\") {\n      if(fileArray !== null){\n        fileArray.map((file) => {\n          \n        })\n      }\n\n      const arrayPost = {\n        idOng: 1,\n        descricao: desc,\n        media: [\n        ],\n      };\n\n      api\n        .post(\"/post\", arrayPost)\n        .then((data) => {\n          console.log(data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      ToastAndroid.show(\"Por favor, faça uma descrição de seu post\");\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== \"web\") {\n        const { status } =\n          await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== \"granted\") {\n          alert(\"Desculpe! Precisamos de permissão para fazer isso funcionar\");\n        }\n      }\n    })();\n  }, []);\n\n  const handleChoosePhoto = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsMultipleSelection: true,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      fileArray.push(result)\n      console.log(fileArray)\n    }\n\n    console.log(result.type);\n  };\n\n  return (\n    <Modal transparent={true} animationType={\"slide\"} onRequestClose={onClose}>\n      <GestureHandlerRootView style={{ flex: 1 }}>\n        {loading && (\n          <ModalShadow>\n            <View\n              style={{\n                width: \"40%\",\n                height: \"20%\",\n                backgroundColor: theme.colors.white,\n                borderRadius: 10,\n                alignItems: \"center\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              <ActivityIndicator size={60} color={theme.colors.secondary} />\n              <Text style={{ fontSize: 20, fontFamily: theme.fonts.medium }}>\n                {\" \"}\n                Carregando...{\" \"}\n              </Text>\n            </View>\n          </ModalShadow>\n        )}\n        <ContainerModal\n          onClose={onClose}\n          title={\"Criar Publicação\"}\n          publish={true}\n          onPress={() => {\n            if (Type === \"post\") {\n              handlePost(\"tesrte\", file);\n            } else if (Type === \"evento\") {\n              console.log(eventoArray);\n            } else if (Type === \"vaga\") {\n              console.log(vagaArray);\n            }\n          }}\n        >\n          <ONGData\n            image={require(\"../../assets/img/ONG.png\")}\n            name={\"GreenPeace\"}\n          />\n          <TypePicker\n            onValueChange={(item) => {\n              setType(item);\n            }}\n            selectedValue={Type}\n            items={types}\n            mode={\"dialog\"}\n          />\n\n          <ScrollView\n            style={styles.containerInput}\n            contentContainerStyle={{ justifyContent: \"center\" }}\n          >\n            {Type == \"post\" && (\n              <ModalPost\n                file={file}\n                setFile={(data) => {\n                  setFile(data);\n                }}\n              />\n            )}\n\n            {Type == \"evento\" && (\n              <ModalEvento\n                file={file}\n                setFile={(data) => {\n                  setFile(data);\n                }}\n              />\n            )}\n\n            {Type == \"vaga\" && <ModalVaga />}\n          </ScrollView>\n\n          <BottomSheetPost>\n            {Type == \"post\" && (\n              <FullButton\n                icon={\"image\"}\n                text={\"Adicionar Foto/Vídeo\"}\n                onPress={handleChoosePhoto}\n              />\n            )}\n\n            {Type == \"evento\" && (\n              <>\n                <FullButton\n                  icon={\"image\"}\n                  text={\"Adicionar Foto/Vídeo\"}\n                  onPress={handleChoosePhoto}\n                />\n\n                <FullButton\n                  icon={\"map-pin\"}\n                  text={\"Adicionar Endereço\"}\n                  onPress={() => {\n                    setModalEndereco(true);\n                  }}\n                />\n\n                <FullButton\n                  icon={\"calendar\"}\n                  text={\"Adicionar Data e Hora\"}\n                  onPress={() => {\n                    setModalDataHora(true);\n                  }}\n                />\n              </>\n            )}\n\n            {modalEndereco && (\n              <ModalEndereco\n                setData={(data) => {\n                  setEndereco(data);\n                }}\n                onClose={() => {\n                  setModalEndereco(false);\n                }}\n              />\n            )}\n\n            {modalDataHora && (\n              <ModalDataHora\n                onClose={() => {\n                  setModalDataHora(false);\n                }}\n                setData={(data) => {\n                  setData(data);\n                }}\n              />\n            )}\n\n            {Type == \"vaga\" && (\n              <>\n                <FullButton\n                  icon={\"map-pin\"}\n                  text={\"Adicionar Endereço\"}\n                  onPress={() => {\n                    setModalEndereco(true);\n                  }}\n                />\n\n                <FullButton\n                  icon={\"calendar\"}\n                  text={\"Adicionar Data e Hora\"}\n                  onPress={() => {\n                    setModalDataHora(true);\n                  }}\n                />\n              </>\n            )}\n          </BottomSheetPost>\n        </ContainerModal>\n      </GestureHandlerRootView>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}