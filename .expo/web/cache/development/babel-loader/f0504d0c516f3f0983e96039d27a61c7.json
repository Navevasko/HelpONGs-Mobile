{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React from \"react\";\nimport { styles } from \"./style\";\nimport Icon from \"@expo/vector-icons/Feather\";\nimport PropTypes from \"prop-types\";\nimport { theme } from \"../../global/styles/theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function InputUnderline(_ref) {\n  var iconName = _ref.iconName,\n      iconColor = _ref.iconColor,\n      iconSize = _ref.iconSize,\n      placeholder = _ref.placeholder,\n      onChangeText = _ref.onChangeText,\n      keyboardType = _ref.keyboardType,\n      value = _ref.value,\n      max = _ref.max,\n      editable = _ref.editable,\n      borderColor = _ref.borderColor,\n      textCenter = _ref.textCenter,\n      onEndEditing = _ref.onEndEditing;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [iconName && _jsx(View, {\n      style: styles.containerIcon,\n      children: _jsx(Icon, {\n        name: iconName,\n        size: iconSize,\n        style: [styles.icon, {\n          color: iconColor\n        }]\n      })\n    }), _jsx(TextInput, {\n      style: [styles.input, {\n        borderBottomColor: borderColor,\n        textAlign: textCenter == true ? \"center\" : \"left\",\n        paddingStart: textCenter == true ? 0 : 5\n      }],\n      placeholder: placeholder,\n      onChangeText: onChangeText,\n      keyboardType: keyboardType,\n      maxLength: max,\n      value: value,\n      editable: editable,\n      onEndEditing: onEndEditing,\n      selectionColor: theme.colors.primaryFaded\n    })]\n  });\n}\nInputUnderline.propTypes = {\n  iconName: PropTypes.string,\n  color: PropTypes.string,\n  size: PropTypes.number,\n  placeholder: PropTypes.string.isRequired,\n  onChangeText: PropTypes.func,\n  keyboardType: PropTypes.oneOf([\"number-pad\", \"decimal-pad\", \"numeric\", \"email-address\", \"phone-pad\", \"default\"]).isRequired,\n  value: PropTypes.string,\n  max: PropTypes.number,\n  editable: PropTypes.bool,\n  borderColor: PropTypes.string,\n  textCenter: PropTypes.bool,\n  onEndEditing: PropTypes.func\n};\nInputUnderline.defaultProps = {\n  keyboardType: \"default\",\n  editable: true,\n  borderColor: theme.colors.black,\n  textCenter: false\n};","map":{"version":3,"sources":["/Users/suporte/Desktop/HelpONGs (MOBILE)/src/components/InputUnderline/index.jsx"],"names":["React","styles","Icon","PropTypes","theme","InputUnderline","iconName","iconColor","iconSize","placeholder","onChangeText","keyboardType","value","max","editable","borderColor","textCenter","onEndEditing","container","containerIcon","icon","color","input","borderBottomColor","textAlign","paddingStart","colors","primaryFaded","propTypes","string","size","number","isRequired","func","oneOf","bool","defaultProps","black"],"mappings":"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","sourcesContent":["import { View, TextInput } from \"react-native\";\nimport React from \"react\";\nimport { styles } from \"./style\";\nimport Icon from \"react-native-vector-icons/Feather\";\nimport PropTypes from \"prop-types\";\nimport { theme } from \"../../global/styles/theme\";\n\nexport default function InputUnderline({\n  iconName,\n  iconColor,\n  iconSize,\n  placeholder,\n  onChangeText,\n  keyboardType,\n  value,\n  max,\n  editable,\n  borderColor,\n  textCenter,\n  onEndEditing,\n}) {\n  return (\n    <View style={styles.container}>\n      {iconName && (\n        <View style={styles.containerIcon}>\n          <Icon\n            name={iconName}\n            size={iconSize}\n            style={[styles.icon, { color: iconColor }]}\n          />\n        </View>\n      )}\n      <TextInput\n        style={[\n          styles.input,\n          {\n            borderBottomColor: borderColor,\n            textAlign: textCenter == true ? \"center\" : \"left\",\n            paddingStart: textCenter == true ? 0 : 5,\n          },\n        ]}\n        placeholder={placeholder}\n        onChangeText={onChangeText}\n        keyboardType={keyboardType}\n        maxLength={max}\n        value={value}\n        editable={editable}\n        onEndEditing={onEndEditing}\n        selectionColor={theme.colors.primaryFaded}\n      />\n    </View>\n  );\n}\n\nInputUnderline.propTypes = {\n  iconName: PropTypes.string,\n  color: PropTypes.string,\n  size: PropTypes.number,\n  placeholder: PropTypes.string.isRequired,\n  onChangeText: PropTypes.func,\n  keyboardType: PropTypes.oneOf([\n    \"number-pad\",\n    \"decimal-pad\",\n    \"numeric\",\n    \"email-address\",\n    \"phone-pad\",\n    \"default\",\n  ]).isRequired,\n  value: PropTypes.string,\n  max: PropTypes.number,\n  editable: PropTypes.bool,\n  borderColor: PropTypes.string,\n  textCenter: PropTypes.bool,\n  onEndEditing: PropTypes.func\n};\n\nInputUnderline.defaultProps = {\n  keyboardType: \"default\",\n  editable: true,\n  borderColor: theme.colors.black,\n  textCenter: false\n};\n"]},"metadata":{},"sourceType":"module"}