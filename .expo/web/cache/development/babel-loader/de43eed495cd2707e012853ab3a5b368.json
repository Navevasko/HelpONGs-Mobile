{"ast":null,"code":"var cnpjMask = function cnpjMask(CNPJ) {\n  return CNPJ.replace(/\\D+/g, \"\").replace(/(\\d{2})(\\d)/, \"$1.$2\").replace(/(\\d{3})(\\d)/, \"$1.$2\").replace(/(\\d{3})(\\d)/, \"$1/$2\").replace(/(\\d{4})(\\d)/, \"$1-$2\").replace(/(-\\d{2})\\d+?$/, \"$1\");\n};\n\nvar dateMask = function dateMask(Date) {\n  return Date.replace(/\\D+/g, \"\").replace(/(\\d{2})(\\d)/, \"$1/$2\").replace(/(\\d{2})(\\d)/, \"$1/$2\");\n};\n\nvar timeMask = function timeMask(Time) {\n  return Time.replace(/\\D+/g, \"\").replace(/(\\d{2})(\\d)/, \"$1:$2\").replace(/(\\d{2})(\\d)/, \"$1:$2\");\n};\n\nvar emailMask = function emailMask(Email) {\n  return Email.replace(/[\\[\\]}!'-,?><|://#\"%$°ºª§\\\\;&*()'ˆß+={]/g, \"\").replace(/(\\d{})/, \"\");\n};\n\nvar nameMask = function nameMask(Nome) {\n  return Nome.replace(/[\\[\\]}.!'-@,><|://#\"%$°ºª§\\\\;&*'\"()_+={]/g, \"\").replace(/[^\\D]/g, \"\");\n};\n\nvar passwordMask = function passwordMask(Senha) {\n  return Senha.replace(/[\\[\\]}.',><|://\"°ºª§\\\\;&'\"()_+={]/g, \"\");\n};\n\nvar cepMask = function cepMask(cep) {\n  return cep.replace(/\\D+/g, \"\").replace(/(\\d{5})(\\d)/, \"$1-$2\");\n};\n\nvar numberMask = function numberMask(Number) {\n  return Number.replace(/\\D+/g, \"\");\n};\n\nexport { cnpjMask, emailMask, nameMask, passwordMask, dateMask, timeMask, cepMask, numberMask };","map":{"version":3,"sources":["/Users/suporte/Desktop/HelpONGs (MOBILE)/src/utils/mask.js"],"names":["cnpjMask","CNPJ","replace","dateMask","Date","timeMask","Time","emailMask","Email","nameMask","Nome","passwordMask","Senha","cepMask","cep","numberMask","Number"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzB,SAAOA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,EAArB,EACJA,OADI,CACI,aADJ,EACmB,OADnB,EAEJA,OAFI,CAEI,aAFJ,EAEmB,OAFnB,EAGJA,OAHI,CAGI,aAHJ,EAGmB,OAHnB,EAIJA,OAJI,CAII,aAJJ,EAImB,OAJnB,EAKJA,OALI,CAKI,eALJ,EAKqB,IALrB,CAAP;AAMD,CAPD;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzB,SAAOA,IAAI,CAACF,OAAL,CAAa,MAAb,EAAqB,EAArB,EACJA,OADI,CACI,aADJ,EACmB,OADnB,EAEJA,OAFI,CAEI,aAFJ,EAEmB,OAFnB,CAAP;AAGD,CAJD;;AAMA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzB,SAAOA,IAAI,CAACJ,OAAL,CAAa,MAAb,EAAqB,EAArB,EACJA,OADI,CACI,aADJ,EACmB,OADnB,EAEJA,OAFI,CAEI,aAFJ,EAEmB,OAFnB,CAAP;AAGD,CAJD;;AAMA,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B,SAAOA,KAAK,CAACN,OAAN,CAAc,0CAAd,EAA0D,EAA1D,EAA8DA,OAA9D,CACL,QADK,EAEL,EAFK,CAAP;AAID,CALD;;AAOA,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzB,SAAOA,IAAI,CAACR,OAAL,CAAa,2CAAb,EAA0D,EAA1D,EAA8DA,OAA9D,CACL,QADK,EAEL,EAFK,CAAP;AAID,CALD;;AAOA,IAAMS,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,SAAOA,KAAK,CAACV,OAAN,CAAc,oCAAd,EAAoD,EAApD,CAAP;AACD,CAFD;;AAIA,IAAMW,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAS;AACvB,SAAOA,GAAG,CAACZ,OAAJ,CAAY,MAAZ,EAAoB,EAApB,EAAwBA,OAAxB,CAAgC,aAAhC,EAA+C,OAA/C,CAAP;AACD,CAFD;;AAIA,IAAMa,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAY;AAC7B,SAAOA,MAAM,CAACd,OAAP,CAAe,MAAf,EAAuB,EAAvB,CAAP;AACD,CAFD;;AAIA,SACEF,QADF,EAEEO,SAFF,EAGEE,QAHF,EAIEE,YAJF,EAKER,QALF,EAMEE,QANF,EAOEQ,OAPF,EAQEE,UARF","sourcesContent":["const cnpjMask = (CNPJ) => {\n  return CNPJ.replace(/\\D+/g, \"\") // não deixa ser digitado nenhuma letra\n    .replace(/(\\d{2})(\\d)/, \"$1.$2\") // captura 2 grupos de número o primeiro com 2 digitos e o segundo de com 3 digitos, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de número\n    .replace(/(\\d{3})(\\d)/, \"$1.$2\")\n    .replace(/(\\d{3})(\\d)/, \"$1/$2\") // captura 2 grupos de número o primeiro e o segundo com 3 digitos, separados por /\n    .replace(/(\\d{4})(\\d)/, \"$1-$2\")\n    .replace(/(-\\d{2})\\d+?$/, \"$1\"); // captura os dois últimos 2 números, com um - antes dos dois números\n};\n\nconst dateMask = (Date) => {\n  return Date.replace(/\\D+/g, \"\")\n    .replace(/(\\d{2})(\\d)/, \"$1/$2\")\n    .replace(/(\\d{2})(\\d)/, \"$1/$2\");\n};\n\nconst timeMask = (Time) => {\n  return Time.replace(/\\D+/g, \"\")\n    .replace(/(\\d{2})(\\d)/, \"$1:$2\")\n    .replace(/(\\d{2})(\\d)/, \"$1:$2\");\n};\n\nconst emailMask = (Email) => {\n  return Email.replace(/[\\[\\]}!'-,?><|://#\"%$°ºª§\\\\;&*()'ˆß+={]/g, \"\").replace(\n    /(\\d{})/,\n    \"\"\n  );\n};\n\nconst nameMask = (Nome) => {\n  return Nome.replace(/[\\[\\]}.!'-@,><|://#\"%$°ºª§\\\\;&*'\"()_+={]/g, \"\").replace(\n    /[^\\D]/g,\n    \"\"\n  );\n};\n\nconst passwordMask = (Senha) => {\n  return Senha.replace(/[\\[\\]}.',><|://\"°ºª§\\\\;&'\"()_+={]/g, \"\");\n};\n\nconst cepMask = (cep) => {\n  return cep.replace(/\\D+/g, \"\").replace(/(\\d{5})(\\d)/, \"$1-$2\");\n};\n\nconst numberMask = (Number) => {\n  return Number.replace(/\\D+/g, \"\");\n};\n\nexport {\n  cnpjMask,\n  emailMask,\n  nameMask,\n  passwordMask,\n  dateMask,\n  timeMask,\n  cepMask,\n  numberMask,\n};\n"]},"metadata":{},"sourceType":"module"}