{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Video } from \"expo-av\";\nimport React, { useState } from \"react\";\nimport { styles } from \"./style\";\nimport { theme } from \"../../global/styles/theme\";\nimport InputUnderline from \"../InputUnderline\";\nimport InvisibleInput from \"../InvisibleInput\";\nimport Icon from \"@expo/vector-icons/Feather\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function ModalEvento(_ref) {\n  var file = _ref.file,\n      setFile = _ref.setFile;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      titulo = _useState2[0],\n      setTitulo = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      desc = _useState4[0],\n      setDesc = _useState4[1];\n\n  var handleFile = function handleFile(file) {\n    if (file == null) {\n      return;\n    } else if (file.type == \"image\") {\n      return \"image\";\n    } else if (file.type == \"video\") {\n      return \"video\";\n    }\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: {\n        paddingStart: 20,\n        paddingEnd: 25\n      },\n      children: [_jsx(InputUnderline, {\n        keyboardType: \"default\",\n        borderColor: theme.colors.primary,\n        placeholder: \"Crie um título para seu evento\",\n        textCenter: true,\n        value: titulo,\n        onChangeText: function onChangeText(text) {\n          setTitulo(text);\n        }\n      }), _jsx(InvisibleInput, {\n        placeholder: \"Faça uma descrição de seu evento\",\n        value: desc,\n        onChangeText: function onChangeText(text) {\n          setDesc(text);\n        }\n      })]\n    }), handleFile(file) == \"image\" && _jsxs(View, {\n      children: [_jsx(Icon, {\n        name: \"x\",\n        size: 45,\n        color: theme.colors.secondary,\n        style: {\n          position: \"relative\",\n          top: 60,\n          alignSelf: \"flex-end\",\n          zIndex: 1\n        },\n        onPress: function onPress() {\n          setFile('');\n        }\n      }), _jsx(Image, {\n        source: {\n          uri: file.uri\n        },\n        style: styles.file\n      })]\n    }), handleFile(file) == \"video\" && _jsx(Video, {\n      source: {\n        uri: file.uri\n      },\n      style: styles.file,\n      resizeMode: \"cover\",\n      shouldPlay: true,\n      isLooping: true\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/suporte/Desktop/HelpONGs (MOBILE)/src/components/ModalEvento/index.jsx"],"names":["Video","React","useState","styles","theme","InputUnderline","InvisibleInput","Icon","ModalEvento","file","setFile","titulo","setTitulo","desc","setDesc","handleFile","type","paddingStart","paddingEnd","colors","primary","text","secondary","position","top","alignSelf","zIndex","uri"],"mappings":";;;AACA,SAASA,KAAT,QAAsB,SAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT;AACA,SAASC,KAAT;AACA,OAAOC,cAAP;AACA,OAAOC,cAAP;AACA,OAAOC,IAAP;;;;AAEA,eAAe,SAASC,WAAT,OAAwC;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AACrD,kBAA4BR,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOS,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAwBV,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACN,IAAD,EAAU;AAC3B,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB;AACD,KAFD,MAEO,IAAIA,IAAI,CAACO,IAAL,IAAa,OAAjB,EAA0B;AAC/B,aAAO,OAAP;AACD,KAFM,MAEA,IAAIP,IAAI,CAACO,IAAL,IAAa,OAAjB,EAA0B;AAC/B,aAAO,OAAP;AACD;AACF,GARD;;AAUA,SACE;AAAA,eACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE,EAAhB;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAb;AAAA,iBACE,KAAC,cAAD;AACE,QAAA,YAAY,EAAC,SADf;AAEE,QAAA,WAAW,EAAEd,KAAK,CAACe,MAAN,CAAaC,OAF5B;AAGE,QAAA,WAAW,EAAE,gCAHf;AAIE,QAAA,UAAU,EAAE,IAJd;AAKE,QAAA,KAAK,EAAET,MALT;AAME,QAAA,YAAY,EAAE,sBAACU,IAAD,EAAU;AACtBT,UAAAA,SAAS,CAACS,IAAD,CAAT;AACD;AARH,QADF,EAYE,KAAC,cAAD;AACE,QAAA,WAAW,EAAE,kCADf;AAEE,QAAA,KAAK,EAAER,IAFT;AAGE,QAAA,YAAY,EAAE,sBAACQ,IAAD,EAAU;AACtBP,UAAAA,OAAO,CAACO,IAAD,CAAP;AACD;AALH,QAZF;AAAA,MADF,EAsBGN,UAAU,CAACN,IAAD,CAAV,IAAoB,OAApB,IACC,MAAC,IAAD;AAAA,iBACE,KAAC,IAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,KAAK,EAAEL,KAAK,CAACe,MAAN,CAAaG,SAHtB;AAIE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,GAAG,EAAE,EAFA;AAGLC,UAAAA,SAAS,EAAE,UAHN;AAILC,UAAAA,MAAM,EAAE;AAJH,SAJT;AAUE,QAAA,OAAO,EAAE,mBAAM;AACbhB,UAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AAZH,QADF,EAeE,KAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAAEiB,UAAAA,GAAG,EAAElB,IAAI,CAACkB;AAAZ,SAAf;AAAkC,QAAA,KAAK,EAAExB,MAAM,CAACM;AAAhD,QAfF;AAAA,MAvBJ,EAyCGM,UAAU,CAACN,IAAD,CAAV,IAAoB,OAApB,IACC,KAAC,KAAD;AACE,MAAA,MAAM,EAAE;AAAEkB,QAAAA,GAAG,EAAElB,IAAI,CAACkB;AAAZ,OADV;AAEE,MAAA,KAAK,EAAExB,MAAM,CAACM,IAFhB;AAGE,MAAA,UAAU,EAAE,OAHd;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,SAAS;AALX,MA1CJ;AAAA,IADF;AAqDD","sourcesContent":["import { View, Image } from \"react-native\";\nimport { Video } from \"expo-av\";\nimport React, { useState } from \"react\";\nimport { styles } from \"./style\";\nimport { theme } from \"../../global/styles/theme\";\nimport InputUnderline from \"../InputUnderline\";\nimport InvisibleInput from \"../InvisibleInput\";\nimport Icon from \"react-native-vector-icons/Feather\";\n\nexport default function ModalEvento({ file, setFile }) {\n  const [titulo, setTitulo] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  const handleFile = (file) => {\n    if (file == null) {\n      return;\n    } else if (file.type == \"image\") {\n      return \"image\";\n    } else if (file.type == \"video\") {\n      return \"video\";\n    }\n  };\n\n  return (\n    <>\n      <View style={{ paddingStart: 20, paddingEnd: 25 }}>\n        <InputUnderline\n          keyboardType=\"default\"\n          borderColor={theme.colors.primary}\n          placeholder={\"Crie um título para seu evento\"}\n          textCenter={true}\n          value={titulo}\n          onChangeText={(text) => {\n            setTitulo(text);\n          }}\n        />\n\n        <InvisibleInput\n          placeholder={\"Faça uma descrição de seu evento\"}\n          value={desc}\n          onChangeText={(text) => {\n            setDesc(text);\n          }}\n        />\n      </View>\n\n      {handleFile(file) == \"image\" && (\n        <View>\n          <Icon\n            name=\"x\"\n            size={45}\n            color={theme.colors.secondary}\n            style={{\n              position: \"relative\",\n              top: 60,\n              alignSelf: \"flex-end\",\n              zIndex: 1,\n            }}\n            onPress={() => {\n              setFile('')\n            }}\n          />\n          <Image source={{ uri: file.uri }} style={styles.file} />\n        </View>\n      )}\n      {handleFile(file) == \"video\" && (\n        <Video\n          source={{ uri: file.uri }}\n          style={styles.file}\n          resizeMode={\"cover\"}\n          shouldPlay\n          isLooping\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}